{"https://doi.org/10.1145/3426428.3426916":{"title":"James Koppel, Daniel Jackson: Demystifying dependence. 48-64","address":"https://doi.org/10.1145/3426428.3426916","index":0},"https://doi.org/10.1145/3426428.3426918":{"title":"Matthew Sotoudeh, Aditya V. Thakur: Analogy-making as a Core primitive in the software engineering toolbox. 101-121","address":"https://doi.org/10.1145/3426428.3426918","index":1},"https://doi.org/10.1145/3426428.3426922":{"title":"Patrick Lam, Jens Dietrich, David J. Pearce: Putting the semantics into semantic versioning. 157-179","address":"https://doi.org/10.1145/3426428.3426922","index":2},"https://doi.org/10.1145/3426428.3426927":{"title":"Stefan K. Muller, Hannah Ringler: A rhetorical framework for programming language evaluation. 187-194","address":"https://doi.org/10.1145/3426428.3426927","index":3},"https://doi.org/10.1145/3426428.3426925":{"title":"Paolo Ciancarini, Sergey Masyagin, Giancarlo Succi: Software design as story telling: reflecting on the work of Italo Calvino. 195-208","address":"https://doi.org/10.1145/3426428.3426925","index":4},"https://doi.org/10.1145/3359591.3359734":{"title":"Shrutarshi Basu, Nate Foster, James Grimmelmann: Property conveyances as a programming language. 128-142","address":"https://doi.org/10.1145/3359591.3359734","index":5},"https://doi.org/10.1145/3359591.3359738":{"title":"Elisa L. A. Baniassad, Ivan Beschastnikh, Reid Holmes, Gregor Kiczales, Meghan Allen: Learning to listen for design. 179-186","address":"https://doi.org/10.1145/3359591.3359738","index":6},"https://doi.org/10.1145/3359591.3359739":{"title":"Yannis Smaragdakis: Next-paradigm programming languages: what will they look like and what changes will they bring? 187-197","address":"https://doi.org/10.1145/3359591.3359739","index":7},"https://doi.org/10.1145/3276954.3276960":{"title":"Carol V. Alexandru, José J. Merchante, Sebastiano Panichella, Sebastian Proksch, Harald C. Gall, Gregorio Robles: On the usage of pythonic idioms. 1-11","address":"https://doi.org/10.1145/3276954.3276960","index":8},"https://doi.org/10.1145/3276954.3276963":{"title":"Antranig Basman, Clayton H. Lewis, Colin B. D. Clark: The open authorial principle: supporting networks of authors in creating externalisable designs. 29-43","address":"https://doi.org/10.1145/3276954.3276963","index":9},"https://doi.org/10.1145/3276954.3276956":{"title":"Stephan Brandauer, Elias Castegren, Tobias Wrigstad: C♭: a new modular approach to implementing efficient and tunable collections. 57-71","address":"https://doi.org/10.1145/3276954.3276956","index":10},"https://doi.org/10.1145/3276954.3276955":{"title":"Pablo Inostroza, Tijs van der Storm: JEff: objects for effect. 111-124","address":"https://doi.org/10.1145/3276954.3276955","index":11},"https://doi.org/10.1145/3276954.3276966":{"title":"Friedrich Steimann: Fatal abstraction. 125-130","address":"https://doi.org/10.1145/3276954.3276966","index":12},"https://doi.org/10.1145/3276954.3276967":{"title":"Daco C. Harkes: We should stop claiming generality in our domain-specific language papers (extended abstract). 131-132","address":"https://doi.org/10.1145/3276954.3276967","index":13},"https://doi.org/10.1145/3276954.3276965":{"title":"Michael J. Coblenz, Jonathan Aldrich, Brad A. Myers, Joshua Sunshine: Interdisciplinary programming language design. 133-146","address":"https://doi.org/10.1145/3276954.3276965","index":14},"https://doi.org/10.1145/3133850.3133863":{"title":"Preston Tunnell Wilson, Justin Pombrio, Shriram Krishnamurthi: Can we crowdsource language design? 1-17","address":"https://doi.org/10.1145/3133850.3133863","index":15},"https://doi.org/10.1145/3133850.3133851":{"title":"Roger D. Chamberlain: Assessing user preferences in programming language design. 18-29","address":"https://doi.org/10.1145/3133850.3133851","index":16},"https://doi.org/10.1145/3133850.3133859":{"title":"Friedrich Steimann: Replacing phrase structure grammar with dependency grammar in the design and implementation of programming languages. 30-43","address":"https://doi.org/10.1145/3133850.3133859","index":17},"https://doi.org/10.1145/3133850.3133861":{"title":"Juliana Franco, Martin Hagelin, Tobias Wrigstad, Sophia Drossopoulou, Susan Eisenbach: You can have it all: abstraction and good cache performance. 148-167","address":"https://doi.org/10.1145/3133850.3133861","index":18},"https://doi.org/10.1145/3133850.3133852":{"title":"Christopher Hall, Trevor Standley, Tobias Höllerer: Infra: structure all the way down: structured data as a visual programming language. 180-197","address":"https://doi.org/10.1145/3133850.3133852","index":19},"https://doi.org/10.1145/3133850.3133857":{"title":"Christoph M. Kirsch: Selfie and the basics. 198-213","address":"https://doi.org/10.1145/3133850.3133857","index":20},"https://doi.org/10.1145/3133850.3133867":{"title":"Stephen Kell: Some were meant for C: the endurance of an unmanageable language. 229-245","address":"https://doi.org/10.1145/3133850.3133867","index":21},"https://doi.org/10.1145/3133850.3133868":{"title":"Antti-Juhani Kaijanaho: Concept analysis in programming language research: done well it is all right. 246-259","address":"https://doi.org/10.1145/3133850.3133868","index":22},"https://doi.org/10.1145/2986012.2986019":{"title":"Kimio Kuramitsu: Nez: practical open grammar language. 29-42","address":"https://doi.org/10.1145/2986012.2986019","index":23},"https://doi.org/10.1145/2986012.2986026":{"title":"Niklas Fors, Görel Hedin: Bloqqi: modular feature-based block diagram programming. 57-73","address":"https://doi.org/10.1145/2986012.2986026","index":24},"https://doi.org/10.1145/2986012.2986025":{"title":"Mehrdad Afshari, Zhendong Su: Building white-box abstractions by program refinement. 74-81","address":"https://doi.org/10.1145/2986012.2986025","index":25},"https://doi.org/10.1145/2986012.2986015":{"title":"Ivan Kuraj, Daniel Jackson: Exploring the role of sequential computation in distributed systems: motivating a programming paradigm shift. 145-164","address":"https://doi.org/10.1145/2986012.2986015","index":26},"https://doi.org/10.1145/2986012.2986022":{"title":"Patrick Rein, Robert Hirschfeld, Marcel Taeumel: Gramada: immediacy in programming language development. 165-179","address":"https://doi.org/10.1145/2986012.2986022","index":27},"https://doi.org/10.1145/2986012.2986031":{"title":"James Noble, Andrew P. Black, Kim B. Bruce, Michael Homer, Mark S. Miller: The left hand of equals. 224-237","address":"https://doi.org/10.1145/2986012.2986031","index":28},"https://doi.org/10.1145/2814228.2814231":{"title":"Mattias De Wael, Stefan Marr, Joeri De Koster, Jennifer B. Sartor, Wolfgang De Meuter: Just-in-time data structures. 61-75","address":"https://doi.org/10.1145/2814228.2814231","index":29},"https://doi.org/10.1145/2814228.2814240":{"title":"Junsong Li, Justin Pombrio, Joe Gibbs Politz, Shriram Krishnamurthi: Slimming languages by reducing sugar: a case for semantics-altering transformations. 90-106","address":"https://doi.org/10.1145/2814228.2814240","index":30},"https://doi.org/10.1145/2814228.2814242":{"title":"Ali Afroozeh, Anastasia Izmaylova: One parser to rule them all. 151-170","address":"https://doi.org/10.1145/2814228.2814242","index":31},"https://doi.org/10.1145/2814228.2814236":{"title":"Guillermo Polito, Stéphane Ducasse, Noury Bouraqadi, Luc Fabresse: A bootstrapping infrastructure to build and extend Pharo-like languages. 183-196","address":"https://doi.org/10.1145/2814228.2814236","index":32},"https://doi.org/10.1145/2814228.2814233":{"title":"Guillermo Polito, Stéphane Ducasse, Noury Bouraqadi, Luc Fabresse, Max Mattone: Virtualization support for dynamic core library update. 211-223","address":"https://doi.org/10.1145/2814228.2814233","index":33},"https://doi.org/10.1145/2814228.2814241":{"title":"Guido Chari, Diego Garbervetsky, Stefan Marr, Stéphane Ducasse: Towards fully reflective environments. 240-253","address":"https://doi.org/10.1145/2814228.2814241","index":34},"https://doi.org/10.1145/2814228.2814249":{"title":"Tomas Petricek: Against a universal definition of 'Type'. 254-266","address":"https://doi.org/10.1145/2814228.2814249","index":35},"https://doi.org/10.1145/2814228.2814247":{"title":"David M. West: The Cuban software revolution: 2016¿2025. 267-281","address":"https://doi.org/10.1145/2814228.2814247","index":36},"https://doi.org/10.1145/2661136.2661152":{"title":"Hesam Samimi, Chris Deaton, Yoshiki Ohshima, Alessandro Warth, Todd D. Millstein: Call by Meaning. 11-28","address":"https://doi.org/10.1145/2661136.2661152","index":37},"https://doi.org/10.1145/2661136.2661139":{"title":"James Skene: Description Logic as Programming Language. 143-162","address":"https://doi.org/10.1145/2661136.2661139","index":38},"https://doi.org/10.1145/2661136.2661138":{"title":"Stéphane Conversy: Unifying Textual and Visual: A Theoretical Account of the Visual Perception of Programming Languages. 201-212","address":"https://doi.org/10.1145/2661136.2661138","index":39},"https://doi.org/10.1145/2661136.2661154":{"title":"Stephen Kell: In Search of Types. 227-241","address":"https://doi.org/10.1145/2661136.2661154","index":40},"https://doi.org/10.1145/2661136.2661159":{"title":"Mathieu Acher, Benoît Combemale, Philippe Collet: Metamorphic Domain-Specific Languages: A Journey into the Shapes of a Language. 243-253","address":"https://doi.org/10.1145/2661136.2661159","index":41},"https://doi.org/10.1145/2661136.2661156":{"title":"Andreas Stefik, Stefan Hanenberg: The Programming Language Wars: Questions and Responsibilities for the Programming Language Community. 283-299","address":"https://doi.org/10.1145/2661136.2661156","index":42},"https://doi.org/10.1145/2661136.2661155":{"title":"Richard P. Gabriel: I Throw Itching Powder at Tulips. 301-319","address":"https://doi.org/10.1145/2661136.2661155","index":43},"https://doi.org/10.1145/2384592.2384595":{"title":"Mehrdad Afshari, Earl T. Barr, Zhendong Su: Liberating the programmer with prorogued programming. 11-26","address":"https://doi.org/10.1145/2384592.2384595","index":44},"https://doi.org/10.1145/2384592.2384597":{"title":"Leo A. Meyerovich, Ariel S. Rabkin: Socio-PLT: principles for programming language adoption. 39-54","address":"https://doi.org/10.1145/2384592.2384597","index":45},"https://doi.org/10.1145/2384592.2384599":{"title":"Joe Gibbs Politz, Hannah Quay-de la Vallee, Shriram Krishnamurthi: Progressive types. 55-66","address":"https://doi.org/10.1145/2384592.2384599","index":46},"https://doi.org/10.1145/2384592.2384601":{"title":"Andrew P. Black, Kim B. Bruce, Michael Homer, James Noble: Grace: the absence of (inessential) difficulty. 85-98","address":"https://doi.org/10.1145/2384592.2384601","index":47},"https://doi.org/10.1145/2384592.2384608":{"title":"Christian Heinlein: MOST-flexiPL: modular, statically typed, flexibly extensible programming language. 159-178","address":"https://doi.org/10.1145/2384592.2384608","index":48},"https://doi.org/10.1145/2384592.2384609":{"title":"Alex Loh, Tijs van der Storm, William R. Cook: Managed data: modular strategies for data abstraction. 179-194","address":"https://doi.org/10.1145/2384592.2384609","index":49},"https://doi.org/10.1145/2384592.2384611":{"title":"Richard P. Gabriel: The structure of a programming language revolution. 195-214","address":"https://doi.org/10.1145/2384592.2384611","index":50},"https://doi.org/10.1145/2048237.2048241":{"title":"Guillaume Marceau, Kathi Fisler, Shriram Krishnamurthi: Mind your language: on novices' interactions with error messages. 3-18","address":"https://doi.org/10.1145/2048237.2048241","index":51},"https://doi.org/10.1145/2048237.2048246":{"title":"Sean McDirmid: Coding at the speed of touch. 61-76","address":"https://doi.org/10.1145/2048237.2048246","index":52},"https://doi.org/10.1145/2048237.2048247":{"title":"Behram F. T. Mistree, Bhupesh Chandra, Ewen Cheslack-Postava, Philip Alexander Levis, David Gay: Emerson: accessible scripting for applications in an extensible virtual world. 77-90","address":"https://doi.org/10.1145/2048237.2048247","index":53},"index":0}